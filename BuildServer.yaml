---
# Docker Install
- hosts: all
  become: true

  tasks:
    # Set Time Zone to America/Chicago
    - name: Set Time Zone
      timezone: 
        name: America/Chicago

    # Mount hard drives to /media
    # Needs Mount Collection from Galaxy

    # "apt update"
    - name: Update Server Apt Cache
      apt: 
        update_cache: yes 
        #force_apt_get: yes 
        upgrade: yes
        cache_valid_time: 3600 
        autoremove: yes

    - name: Install required system packages
      apt:  name={{ item }} state=latest update_cache=yes
      loop: ['apt-transport-https','ca-certificates','curl','software-properties-common','gnupg','lsb-release','htop']

    - name: Add Docker GPG Apt Key
      apt_key: 
        url: 'https://download.docker.com/linux/ubuntu/gpg' 
        state: present

    - name: Add Docker Repo
      apt_repository: 
        repo: 'deb https://download.docker.com/linux/ubuntu bionic stable' 
        state: present

    - name: Update apt and Install Docker-CE
      apt: 
        name: "{{ item }}" 
        state: latest 
        update_cache: yes 
      loop:
        - docker-ce
        - docker-compose

          #    - name: Install Jellyfin and Plex
          #apt:
          #name: "{{ item }}"
          #state: latest
          #loop:
          #- jellyfin-server
          #- plexmediaserver

    - name: Place ascott in Docker group
      user: 
        name: "ascott" 
        groups: "docker" 
        append: yes

    - name: Install Neovim
      apt: 
        name: "neovim" 
        state: present
        update_cache: no

    - name: Download Dot Files from Git
      git:
        repo: https://github.com/sixstorm/dotfiles.git
        dest: /home/ascott
        clone: yes
          #update: yes

    - name: Create Neovim Directory
      file:
        path: /home/ascott/.config/nvim
        state: directory

    # - name: Copy init.vim
    #   copy:
    #     remote_src: yes
    #     src: /home/ascott/dotfiles/.config/nvim/init.vim
    #     dest: /home/ascott/.config/nvim

  # Docker Containers
    - name: WatchTower
      docker_container:
        name: watchtower
        image: containrrr/watchtower
        state: started
        restart_policy: unless-stopped
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    - name: Flame
      docker_container:
        name: flame
        image: pawelmalak/flame:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - /media/softstorage/docker/flame:/app/data
          - /var/run/docker.sock:/var/run/docker.sock
        ports:
          - "5005:5005"

    - name: MeTube
      docker_container:
        image: alexta69/metube
        name: metube
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          DOWNLOAD_DIR: "/downloads/MP4"
          AUDIO_DOWNLOAD_DIR: "/downloads/MP3"
        ports:
          - "8081:8081"
        volumes:
          - /media/mediastorage/Youtube:/downloads

    - name: Radarr
      docker_container:
        image: lscr.io/linuxserver/radarr
        name: radarr
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Chicago/America"
        ports:
          - "7878:7878"
        volumes:
          - /media/softstorage/docker/radarr:/config
          - /media/moviestorage/Movies:/movies
          - /media/ssdcache:/downloads

    - name: Sonarr
      docker_container:
        image: lscr.io/linuxserver/sonarr
        name: sonarr
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Chicago/America"
        ports:
          - "8989:8989"
        volumes:
        - /media/softstorage/docker/sonarr:/config
        - /media/mediastorage/Movies/TV Shows:/tv #optional
        - /media/ssdcache:/downloads #optional

    - name: qBittorrent
      docker_container:
        image: lscr.io/linuxserver/qbittorrent
        name: qbittorrent
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Chicago/America"
        ports:
          - "8082:8082"
          - "6881:6881"
        volumes:
          - /media/softstorage/docker/qbit/config:/config
          - /media/mediastorage/Movies/Torrents/:/downloads

    - name: SABNZBd
      docker_container:
        image: lscr.io/linuxserver/sabnzbd
        name: SABNZBd
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Chicago/America"
        ports:
          - "8080:8080"
          - "9090:9090"
        volumes:
          - /media/softstorage/docker/sabnzbd/config:/config
          - /media/ssdcache:/downloads
          - /media/ssdcache:/incomplete-downloads

    - name: OMBI
      docker_container:
        image: lscr.io/linuxserver/ombi
        name: ombi
        state: started
        restart_policy: unless-stopped
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "Chicago/America"
        ports:
          - "3579:3579"
        volumes:
          - /media/softstorage/docker/ombi/config:/config
